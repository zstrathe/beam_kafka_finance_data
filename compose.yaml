# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose

services:
  db:
    image: postgres
    restart: always
    user: postgres
    secrets:
      - db-password
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  websocket-bridge:
    build:
      context: ./websocket_bridge_producer
    develop:
      watch:
        - action: rebuild
          path: ./websocket_bridge_producer

volumes:
  db-data:
secrets:
  db-password:
    file: secrets/pg_password.txt

include:
  - ./airflow/docker-compose.yaml # include Docker compose for Airflow services
  - ./kafka/docker-compose.yaml # include Docker compose for Kafka services

